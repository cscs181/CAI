"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor

class LightApp(Message):
    """im/oidb/cmd0x857/GroupOpenSysMsg.java

    """
    DESCRIPTOR: Descriptor
    APP_FIELD_NUMBER: int
    VIEW_FIELD_NUMBER: int
    DESC_FIELD_NUMBER: int
    PROMPT_FIELD_NUMBER: int
    VER_FIELD_NUMBER: int
    META_FIELD_NUMBER: int
    CONFIG_FIELD_NUMBER: int
    SOURCE_FIELD_NUMBER: int
    app: Text
    view: Text
    desc: Text
    prompt: Text
    ver: Text
    meta: Text
    config: Text
    @property
    def source(self) -> Source: ...
    def __init__(self,
        *,
        app: Optional[Text] = ...,
        view: Optional[Text] = ...,
        desc: Optional[Text] = ...,
        prompt: Optional[Text] = ...,
        ver: Optional[Text] = ...,
        meta: Optional[Text] = ...,
        config: Optional[Text] = ...,
        source: Optional[Source] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["app",b"app","config",b"config","desc",b"desc","meta",b"meta","prompt",b"prompt","source",b"source","ver",b"ver","view",b"view"]) -> bool: ...
    def ClearField(self, field_name: Literal["app",b"app","config",b"config","desc",b"desc","meta",b"meta","prompt",b"prompt","source",b"source","ver",b"ver","view",b"view"]) -> None: ...

class RichMsg(Message):
    DESCRIPTOR: Descriptor
    TITLE_FIELD_NUMBER: int
    DESC_FIELD_NUMBER: int
    BRIEF_FIELD_NUMBER: int
    COVER_FIELD_NUMBER: int
    URL_FIELD_NUMBER: int
    SOURCE_FIELD_NUMBER: int
    title: Text
    desc: Text
    brief: Text
    cover: Text
    url: Text
    @property
    def source(self) -> Source: ...
    def __init__(self,
        *,
        title: Optional[Text] = ...,
        desc: Optional[Text] = ...,
        brief: Optional[Text] = ...,
        cover: Optional[Text] = ...,
        url: Optional[Text] = ...,
        source: Optional[Source] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["brief",b"brief","cover",b"cover","desc",b"desc","source",b"source","title",b"title","url",b"url"]) -> bool: ...
    def ClearField(self, field_name: Literal["brief",b"brief","cover",b"cover","desc",b"desc","source",b"source","title",b"title","url",b"url"]) -> None: ...

class Sender(Message):
    DESCRIPTOR: Descriptor
    UIN_FIELD_NUMBER: int
    NICK_FIELD_NUMBER: int
    AVATAR_FIELD_NUMBER: int
    URL_FIELD_NUMBER: int
    uin: int
    nick: Text
    avatar: Text
    url: Text
    def __init__(self,
        *,
        uin: Optional[int] = ...,
        nick: Optional[Text] = ...,
        avatar: Optional[Text] = ...,
        url: Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["avatar",b"avatar","nick",b"nick","uin",b"uin","url",b"url"]) -> bool: ...
    def ClearField(self, field_name: Literal["avatar",b"avatar","nick",b"nick","uin",b"uin","url",b"url"]) -> None: ...

class Source(Message):
    DESCRIPTOR: Descriptor
    NAME_FIELD_NUMBER: int
    ICON_FIELD_NUMBER: int
    URL_FIELD_NUMBER: int
    name: Text
    icon: Text
    url: Text
    def __init__(self,
        *,
        name: Optional[Text] = ...,
        icon: Optional[Text] = ...,
        url: Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["icon",b"icon","name",b"name","url",b"url"]) -> bool: ...
    def ClearField(self, field_name: Literal["icon",b"icon","name",b"name","url",b"url"]) -> None: ...

class SysMsgBody(Message):
    DESCRIPTOR: Descriptor
    GROUP_ID_FIELD_NUMBER: int
    APPID_FIELD_NUMBER: int
    SENDER_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    CONTENT_FIELD_NUMBER: int
    RICH_MSG_FIELD_NUMBER: int
    LIGHT_APP_FIELD_NUMBER: int
    group_id: int
    appid: int
    @property
    def sender(self) -> Sender: ...
    type: int
    content: Text
    @property
    def rich_msg(self) -> RichMsg: ...
    @property
    def light_app(self) -> LightApp: ...
    def __init__(self,
        *,
        group_id: Optional[int] = ...,
        appid: Optional[int] = ...,
        sender: Optional[Sender] = ...,
        type: Optional[int] = ...,
        content: Optional[Text] = ...,
        rich_msg: Optional[RichMsg] = ...,
        light_app: Optional[LightApp] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["appid",b"appid","content",b"content","group_id",b"group_id","light_app",b"light_app","rich_msg",b"rich_msg","sender",b"sender","type",b"type"]) -> bool: ...
    def ClearField(self, field_name: Literal["appid",b"appid","content",b"content","group_id",b"group_id","light_app",b"light_app","rich_msg",b"rich_msg","sender",b"sender","type",b"type"]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    int,
)

from cai.pb.im.msg.msg_body.msg_body_pb2 import (
    MsgBody,
)

from cai.pb.im.msg.msg_head.msg_head_pb2 import (
    InstCtrl,
)

from cai.pb.im.msg.receipt.receipt_pb2 import (
    ReceiptReq,
    ReceiptResp,
)

from cai.pb.msf.msg.comm.comm_pb2 import (
    AppShareInfo,
    ContentHead,
    Msg,
    UinPairMsg,
)

from cai.pb.msf.msg.ctrl.ctrl_pb2 import (
    MsgCtrl,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor

class AccostTmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    REPLY_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    reply: bool
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        reply: Optional[bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["reply",b"reply","sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["reply",b"reply","sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class AddressListTmp(Message):
    DESCRIPTOR: Descriptor
    FROM_PHONE_FIELD_NUMBER: int
    TO_PHONE_FIELD_NUMBER: int
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    FROM_CONTACT_SIZE_FIELD_NUMBER: int
    from_phone: Text
    to_phone: Text
    to_uin: int
    sig: bytes
    from_contact_size: int
    def __init__(self,
        *,
        from_phone: Optional[Text] = ...,
        to_phone: Optional[Text] = ...,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        from_contact_size: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["from_contact_size",b"from_contact_size","from_phone",b"from_phone","sig",b"sig","to_phone",b"to_phone","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["from_contact_size",b"from_contact_size","from_phone",b"from_phone","sig",b"sig","to_phone",b"to_phone","to_uin",b"to_uin"]) -> None: ...

class AuthTmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class BsnsTmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class BusinessWPATmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    SIGT_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    sigt: bytes
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        sigt: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["sig",b"sig","sigt",b"sigt","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["sig",b"sig","sigt",b"sigt","to_uin",b"to_uin"]) -> None: ...

class C2C(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    to_uin: int
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["to_uin",b"to_uin"]) -> None: ...

class CommTmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    C2C_TYPE_FIELD_NUMBER: int
    SVR_TYPE_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    RESERVED_FIELD_NUMBER: int
    to_uin: int
    c2c_type: int
    svr_type: int
    sig: bytes
    reserved: bytes
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        c2c_type: Optional[int] = ...,
        svr_type: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        reserved: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["c2c_type",b"c2c_type","reserved",b"reserved","sig",b"sig","svr_type",b"svr_type","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["c2c_type",b"c2c_type","reserved",b"reserved","sig",b"sig","svr_type",b"svr_type","to_uin",b"to_uin"]) -> None: ...

class Dis(Message):
    DESCRIPTOR: Descriptor
    DIS_UIN_FIELD_NUMBER: int
    dis_uin: int
    def __init__(self,
        *,
        dis_uin: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["dis_uin",b"dis_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["dis_uin",b"dis_uin"]) -> None: ...

class DisTmp(Message):
    DESCRIPTOR: Descriptor
    DIS_UIN_FIELD_NUMBER: int
    TO_UIN_FIELD_NUMBER: int
    dis_uin: int
    to_uin: int
    def __init__(self,
        *,
        dis_uin: Optional[int] = ...,
        to_uin: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["dis_uin",b"dis_uin","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["dis_uin",b"dis_uin","to_uin",b"to_uin"]) -> None: ...

class Grp(Message):
    DESCRIPTOR: Descriptor
    GROUP_CODE_FIELD_NUMBER: int
    group_code: int
    def __init__(self,
        *,
        group_code: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["group_code",b"group_code"]) -> bool: ...
    def ClearField(self, field_name: Literal["group_code",b"group_code"]) -> None: ...

class GrpTmp(Message):
    DESCRIPTOR: Descriptor
    GROUP_UIN_FIELD_NUMBER: int
    TO_UIN_FIELD_NUMBER: int
    group_uin: int
    to_uin: int
    def __init__(self,
        *,
        group_uin: Optional[int] = ...,
        to_uin: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["group_uin",b"group_uin","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["group_uin",b"group_uin","to_uin",b"to_uin"]) -> None: ...

class MsgSendInfo(Message):
    DESCRIPTOR: Descriptor
    RECEIVER_FIELD_NUMBER: int
    receiver: int
    def __init__(self,
        *,
        receiver: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["receiver",b"receiver"]) -> bool: ...
    def ClearField(self, field_name: Literal["receiver",b"receiver"]) -> None: ...

class MultiMsgAssist(Message):
    DESCRIPTOR: Descriptor
    REPEATED_ROUTING_FIELD_NUMBER: int
    USE_FIELD_NUMBER: int
    TEMP_ID_FIELD_NUMBER: int
    VEDIO_LEN_FIELD_NUMBER: int
    REDBAG_ID_FIELD_NUMBER: int
    REDBAG_AMOUNT_FIELD_NUMBER: int
    HAS_READBAG_FIELD_NUMBER: int
    HAS_VEDIO_FIELD_NUMBER: int
    @property
    def repeated_routing(self) -> RepeatedCompositeFieldContainer[RoutingHead]: ...
    use: int
    temp_id: int
    vedio_len: int
    redbag_id: bytes
    redbag_amount: int
    has_readbag: int
    has_vedio: int
    def __init__(self,
        *,
        repeated_routing: Optional[Iterable[RoutingHead]] = ...,
        use: Optional[int] = ...,
        temp_id: Optional[int] = ...,
        vedio_len: Optional[int] = ...,
        redbag_id: Optional[bytes] = ...,
        redbag_amount: Optional[int] = ...,
        has_readbag: Optional[int] = ...,
        has_vedio: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["has_readbag",b"has_readbag","has_vedio",b"has_vedio","redbag_amount",b"redbag_amount","redbag_id",b"redbag_id","temp_id",b"temp_id","use",b"use","vedio_len",b"vedio_len"]) -> bool: ...
    def ClearField(self, field_name: Literal["has_readbag",b"has_readbag","has_vedio",b"has_vedio","redbag_amount",b"redbag_amount","redbag_id",b"redbag_id","repeated_routing",b"repeated_routing","temp_id",b"temp_id","use",b"use","vedio_len",b"vedio_len"]) -> None: ...

class NearByAssistantTmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    REPLY_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    reply: bool
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        reply: Optional[bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["reply",b"reply","sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["reply",b"reply","sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class NearByDatingTmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    REPLY_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    reply: bool
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        reply: Optional[bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["reply",b"reply","sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["reply",b"reply","sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class PbBindUinGetMsgReq(Message):
    DESCRIPTOR: Descriptor
    BIND_UIN_FIELD_NUMBER: int
    BIND_UIN_SIG_FIELD_NUMBER: int
    SYNC_FLAG_FIELD_NUMBER: int
    SYNC_COOKIE_FIELD_NUMBER: int
    bind_uin: int
    bind_uin_sig: bytes
    sync_flag: int
    sync_cookie: bytes
    def __init__(self,
        *,
        bind_uin: Optional[int] = ...,
        bind_uin_sig: Optional[bytes] = ...,
        sync_flag: Optional[int] = ...,
        sync_cookie: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["bind_uin",b"bind_uin","bind_uin_sig",b"bind_uin_sig","sync_cookie",b"sync_cookie","sync_flag",b"sync_flag"]) -> bool: ...
    def ClearField(self, field_name: Literal["bind_uin",b"bind_uin","bind_uin_sig",b"bind_uin_sig","sync_cookie",b"sync_cookie","sync_flag",b"sync_flag"]) -> None: ...

class PbBindUinMsgReadedConfirmReq(Message):
    DESCRIPTOR: Descriptor
    SYNC_COOKIE_FIELD_NUMBER: int
    BIND_UIN_FIELD_NUMBER: int
    sync_cookie: bytes
    bind_uin: int
    def __init__(self,
        *,
        sync_cookie: Optional[bytes] = ...,
        bind_uin: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["bind_uin",b"bind_uin","sync_cookie",b"sync_cookie"]) -> bool: ...
    def ClearField(self, field_name: Literal["bind_uin",b"bind_uin","sync_cookie",b"sync_cookie"]) -> None: ...

class PbBindUinMsgReadedConfirmResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SYNC_COOKIE_FIELD_NUMBER: int
    BIND_UIN_FIELD_NUMBER: int
    result: int
    errmsg: Text
    sync_cookie: bytes
    bind_uin: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        sync_cookie: Optional[bytes] = ...,
        bind_uin: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["bind_uin",b"bind_uin","errmsg",b"errmsg","result",b"result","sync_cookie",b"sync_cookie"]) -> bool: ...
    def ClearField(self, field_name: Literal["bind_uin",b"bind_uin","errmsg",b"errmsg","result",b"result","sync_cookie",b"sync_cookie"]) -> None: ...

class PbBindUinUnReadMsgNumReq(Message):
    DESCRIPTOR: Descriptor
    BIND_UIN_FIELD_NUMBER: int
    SYNC_COOKIE_FIELD_NUMBER: int
    bind_uin: int
    sync_cookie: bytes
    def __init__(self,
        *,
        bind_uin: Optional[int] = ...,
        sync_cookie: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["bind_uin",b"bind_uin","sync_cookie",b"sync_cookie"]) -> bool: ...
    def ClearField(self, field_name: Literal["bind_uin",b"bind_uin","sync_cookie",b"sync_cookie"]) -> None: ...

class PbBindUinUnReadMsgNumResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    BIND_UIN_FIELD_NUMBER: int
    NUM_FIELD_NUMBER: int
    result: int
    errmsg: Text
    bind_uin: int
    num: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        bind_uin: Optional[int] = ...,
        num: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["bind_uin",b"bind_uin","errmsg",b"errmsg","num",b"num","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["bind_uin",b"bind_uin","errmsg",b"errmsg","num",b"num","result",b"result"]) -> None: ...

class PbC2CMsgWithDrawReq(Message):
    DESCRIPTOR: Descriptor
    class MsgInfo(Message):
        DESCRIPTOR: Descriptor
        FROM_UIN_FIELD_NUMBER: int
        TO_UIN_FIELD_NUMBER: int
        MSG_SEQ_FIELD_NUMBER: int
        MSG_UID_FIELD_NUMBER: int
        MSG_TIME_FIELD_NUMBER: int
        MSG_RANDOM_FIELD_NUMBER: int
        PKG_NUM_FIELD_NUMBER: int
        PKG_INDEX_FIELD_NUMBER: int
        DIV_SEQ_FIELD_NUMBER: int
        MSG_TYPE_FIELD_NUMBER: int
        ROUTING_HEAD_FIELD_NUMBER: int
        from_uin: int
        to_uin: int
        msg_seq: int
        msg_uid: int
        msg_time: int
        msg_random: int
        pkg_num: int
        pkg_index: int
        div_seq: int
        msg_type: int
        @property
        def routing_head(self) -> RoutingHead: ...
        def __init__(self,
            *,
            from_uin: Optional[int] = ...,
            to_uin: Optional[int] = ...,
            msg_seq: Optional[int] = ...,
            msg_uid: Optional[int] = ...,
            msg_time: Optional[int] = ...,
            msg_random: Optional[int] = ...,
            pkg_num: Optional[int] = ...,
            pkg_index: Optional[int] = ...,
            div_seq: Optional[int] = ...,
            msg_type: Optional[int] = ...,
            routing_head: Optional[RoutingHead] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal["div_seq",b"div_seq","from_uin",b"from_uin","msg_random",b"msg_random","msg_seq",b"msg_seq","msg_time",b"msg_time","msg_type",b"msg_type","msg_uid",b"msg_uid","pkg_index",b"pkg_index","pkg_num",b"pkg_num","routing_head",b"routing_head","to_uin",b"to_uin"]) -> bool: ...
        def ClearField(self, field_name: Literal["div_seq",b"div_seq","from_uin",b"from_uin","msg_random",b"msg_random","msg_seq",b"msg_seq","msg_time",b"msg_time","msg_type",b"msg_type","msg_uid",b"msg_uid","pkg_index",b"pkg_index","pkg_num",b"pkg_num","routing_head",b"routing_head","to_uin",b"to_uin"]) -> None: ...

    INFO_FIELD_NUMBER: int
    LONG_MESSAGE_FLAG_FIELD_NUMBER: int
    RESERVED_FIELD_NUMBER: int
    SUB_CMD_FIELD_NUMBER: int
    @property
    def info(self) -> RepeatedCompositeFieldContainer[PbC2CMsgWithDrawReq.MsgInfo]: ...
    long_message_flag: int
    reserved: bytes
    sub_cmd: int
    def __init__(self,
        *,
        info: Optional[Iterable[PbC2CMsgWithDrawReq.MsgInfo]] = ...,
        long_message_flag: Optional[int] = ...,
        reserved: Optional[bytes] = ...,
        sub_cmd: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["long_message_flag",b"long_message_flag","reserved",b"reserved","sub_cmd",b"sub_cmd"]) -> bool: ...
    def ClearField(self, field_name: Literal["info",b"info","long_message_flag",b"long_message_flag","reserved",b"reserved","sub_cmd",b"sub_cmd"]) -> None: ...

class PbC2CMsgWithDrawResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    STATUS_FIELD_NUMBER: int
    SUB_CMD_FIELD_NUMBER: int
    WORDING_INFO_FIELD_NUMBER: int
    result: int
    errmsg: Text
    @property
    def status(self) -> RepeatedCompositeFieldContainer[MsgStatus]: ...
    sub_cmd: int
    @property
    def wording_info(self) -> WithDrawWordingInfo: ...
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        status: Optional[Iterable[MsgStatus]] = ...,
        sub_cmd: Optional[int] = ...,
        wording_info: Optional[WithDrawWordingInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","result",b"result","sub_cmd",b"sub_cmd","wording_info",b"wording_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","result",b"result","status",b"status","sub_cmd",b"sub_cmd","wording_info",b"wording_info"]) -> None: ...

class MsgStatus(Message):
    DESCRIPTOR: Descriptor
    INFO_FIELD_NUMBER: int
    STATUS_FIELD_NUMBER: int
    @property
    def info(self) -> PbC2CMsgWithDrawReq.MsgInfo: ...
    status: int
    def __init__(self,
        *,
        info: Optional[PbC2CMsgWithDrawReq.MsgInfo] = ...,
        status: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["info",b"info","status",b"status"]) -> bool: ...
    def ClearField(self, field_name: Literal["info",b"info","status",b"status"]) -> None: ...

class PbC2CReadedReportReq(Message):
    DESCRIPTOR: Descriptor
    SYNC_COOKIE_FIELD_NUMBER: int
    PAIR_INFO_FIELD_NUMBER: int
    sync_cookie: bytes
    @property
    def pair_info(self) -> RepeatedCompositeFieldContainer[UinPairReadInfo]: ...
    def __init__(self,
        *,
        sync_cookie: Optional[bytes] = ...,
        pair_info: Optional[Iterable[UinPairReadInfo]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["sync_cookie",b"sync_cookie"]) -> bool: ...
    def ClearField(self, field_name: Literal["pair_info",b"pair_info","sync_cookie",b"sync_cookie"]) -> None: ...

class UinPairReadInfo(Message):
    DESCRIPTOR: Descriptor
    PEER_UIN_FIELD_NUMBER: int
    LAST_READ_TIME_FIELD_NUMBER: int
    CRM_SIG_FIELD_NUMBER: int
    PEER_TYPE_FIELD_NUMBER: int
    CHAT_TYPE_FIELD_NUMBER: int
    CPID_FIELD_NUMBER: int
    AIO_TYPE_FIELD_NUMBER: int
    TO_TINY_ID_FIELD_NUMBER: int
    peer_uin: int
    last_read_time: int
    crm_sig: bytes
    peer_type: int
    chat_type: int
    cpid: int
    aio_type: int
    to_tiny_id: int
    def __init__(self,
        *,
        peer_uin: Optional[int] = ...,
        last_read_time: Optional[int] = ...,
        crm_sig: Optional[bytes] = ...,
        peer_type: Optional[int] = ...,
        chat_type: Optional[int] = ...,
        cpid: Optional[int] = ...,
        aio_type: Optional[int] = ...,
        to_tiny_id: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["aio_type",b"aio_type","chat_type",b"chat_type","cpid",b"cpid","crm_sig",b"crm_sig","last_read_time",b"last_read_time","peer_type",b"peer_type","peer_uin",b"peer_uin","to_tiny_id",b"to_tiny_id"]) -> bool: ...
    def ClearField(self, field_name: Literal["aio_type",b"aio_type","chat_type",b"chat_type","cpid",b"cpid","crm_sig",b"crm_sig","last_read_time",b"last_read_time","peer_type",b"peer_type","peer_uin",b"peer_uin","to_tiny_id",b"to_tiny_id"]) -> None: ...

class PbC2CReadedReportResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SYNC_COOKIE_FIELD_NUMBER: int
    result: int
    errmsg: Text
    sync_cookie: bytes
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        sync_cookie: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","result",b"result","sync_cookie",b"sync_cookie"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","result",b"result","sync_cookie",b"sync_cookie"]) -> None: ...

class PbC2CUnReadMsgNumReq(Message):
    DESCRIPTOR: Descriptor
    def __init__(self,
        ) -> None: ...

class PbC2CUnReadMsgNumResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    NUM_FIELD_NUMBER: int
    result: int
    errmsg: Text
    num: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        num: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","num",b"num","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","num",b"num","result",b"result"]) -> None: ...

class PbDelRoamMsgReq(Message):
    DESCRIPTOR: Descriptor
    C2C_MSG_FIELD_NUMBER: int
    GRP_MSG_FIELD_NUMBER: int
    DIS_MSG_FIELD_NUMBER: int
    @property
    def c2c_msg(self) -> C2CMsg: ...
    @property
    def grp_msg(self) -> GrpMsg: ...
    @property
    def dis_msg(self) -> DisMsg: ...
    def __init__(self,
        *,
        c2c_msg: Optional[C2CMsg] = ...,
        grp_msg: Optional[GrpMsg] = ...,
        dis_msg: Optional[DisMsg] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["c2c_msg",b"c2c_msg","dis_msg",b"dis_msg","grp_msg",b"grp_msg"]) -> bool: ...
    def ClearField(self, field_name: Literal["c2c_msg",b"c2c_msg","dis_msg",b"dis_msg","grp_msg",b"grp_msg"]) -> None: ...

class C2CMsg(Message):
    DESCRIPTOR: Descriptor
    FROM_UIN_FIELD_NUMBER: int
    PEER_UIN_FIELD_NUMBER: int
    TIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    from_uin: int
    peer_uin: int
    time: int
    random: int
    seq: int
    def __init__(self,
        *,
        from_uin: Optional[int] = ...,
        peer_uin: Optional[int] = ...,
        time: Optional[int] = ...,
        random: Optional[int] = ...,
        seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["from_uin",b"from_uin","peer_uin",b"peer_uin","random",b"random","seq",b"seq","time",b"time"]) -> bool: ...
    def ClearField(self, field_name: Literal["from_uin",b"from_uin","peer_uin",b"peer_uin","random",b"random","seq",b"seq","time",b"time"]) -> None: ...

class DisMsg(Message):
    DESCRIPTOR: Descriptor
    DISCUSS_UIN_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    discuss_uin: int
    seq: int
    def __init__(self,
        *,
        discuss_uin: Optional[int] = ...,
        seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["discuss_uin",b"discuss_uin","seq",b"seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["discuss_uin",b"discuss_uin","seq",b"seq"]) -> None: ...

class GrpMsg(Message):
    DESCRIPTOR: Descriptor
    GROUP_CODE_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    RESV_FLAG_FIELD_NUMBER: int
    group_code: int
    seq: int
    resv_flag: int
    def __init__(self,
        *,
        group_code: Optional[int] = ...,
        seq: Optional[int] = ...,
        resv_flag: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["group_code",b"group_code","resv_flag",b"resv_flag","seq",b"seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["group_code",b"group_code","resv_flag",b"resv_flag","seq",b"seq"]) -> None: ...

class PbDelRoamMsgResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    result: int
    errmsg: Text
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","result",b"result"]) -> None: ...

class PbDeleteMsgReq(Message):
    DESCRIPTOR: Descriptor
    class MsgItem(Message):
        DESCRIPTOR: Descriptor
        FROM_UIN_FIELD_NUMBER: int
        TO_UIN_FIELD_NUMBER: int
        TYPE_FIELD_NUMBER: int
        SEQ_FIELD_NUMBER: int
        UID_FIELD_NUMBER: int
        SIG_FIELD_NUMBER: int
        from_uin: int
        to_uin: int
        type: int
        seq: int
        uid: int
        sig: bytes
        def __init__(self,
            *,
            from_uin: Optional[int] = ...,
            to_uin: Optional[int] = ...,
            type: Optional[int] = ...,
            seq: Optional[int] = ...,
            uid: Optional[int] = ...,
            sig: Optional[bytes] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal["from_uin",b"from_uin","seq",b"seq","sig",b"sig","to_uin",b"to_uin","type",b"type","uid",b"uid"]) -> bool: ...
        def ClearField(self, field_name: Literal["from_uin",b"from_uin","seq",b"seq","sig",b"sig","to_uin",b"to_uin","type",b"type","uid",b"uid"]) -> None: ...

    MSG_ITEMS_FIELD_NUMBER: int
    @property
    def msg_items(self) -> RepeatedCompositeFieldContainer[PbDeleteMsgReq.MsgItem]: ...
    def __init__(self,
        *,
        msg_items: Optional[Iterable[PbDeleteMsgReq.MsgItem]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["msg_items",b"msg_items"]) -> None: ...

class PbDeleteMsgResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    result: int
    errmsg: Text
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","result",b"result"]) -> None: ...

class PbDiscussReadedReportReq(Message):
    DESCRIPTOR: Descriptor
    CONF_UIN_FIELD_NUMBER: int
    LAST_READ_SEQ_FIELD_NUMBER: int
    conf_uin: int
    last_read_seq: int
    def __init__(self,
        *,
        conf_uin: Optional[int] = ...,
        last_read_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["conf_uin",b"conf_uin","last_read_seq",b"last_read_seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["conf_uin",b"conf_uin","last_read_seq",b"last_read_seq"]) -> None: ...

class PbDiscussReadedReportResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    CONF_UIN_FIELD_NUMBER: int
    MEMBER_SEQ_FIELD_NUMBER: int
    CONF_SEQ_FIELD_NUMBER: int
    result: int
    errmsg: Text
    conf_uin: int
    member_seq: int
    conf_seq: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        conf_uin: Optional[int] = ...,
        member_seq: Optional[int] = ...,
        conf_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["conf_seq",b"conf_seq","conf_uin",b"conf_uin","errmsg",b"errmsg","member_seq",b"member_seq","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["conf_seq",b"conf_seq","conf_uin",b"conf_uin","errmsg",b"errmsg","member_seq",b"member_seq","result",b"result"]) -> None: ...

class PbGetDiscussMsgReq(Message):
    DESCRIPTOR: Descriptor
    DISCUSS_UIN_FIELD_NUMBER: int
    END_SEQ_FIELD_NUMBER: int
    BEGIN_SEQ_FIELD_NUMBER: int
    LAST_GET_TIME_FIELD_NUMBER: int
    DISCUSS_INFO_SEQ_FIELD_NUMBER: int
    FILTER_FIELD_NUMBER: int
    MEMBER_SEQ_FIELD_NUMBER: int
    discuss_uin: int
    end_seq: int
    begin_seq: int
    last_get_time: int
    discuss_info_seq: int
    filter: int
    member_seq: int
    def __init__(self,
        *,
        discuss_uin: Optional[int] = ...,
        end_seq: Optional[int] = ...,
        begin_seq: Optional[int] = ...,
        last_get_time: Optional[int] = ...,
        discuss_info_seq: Optional[int] = ...,
        filter: Optional[int] = ...,
        member_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["begin_seq",b"begin_seq","discuss_info_seq",b"discuss_info_seq","discuss_uin",b"discuss_uin","end_seq",b"end_seq","filter",b"filter","last_get_time",b"last_get_time","member_seq",b"member_seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["begin_seq",b"begin_seq","discuss_info_seq",b"discuss_info_seq","discuss_uin",b"discuss_uin","end_seq",b"end_seq","filter",b"filter","last_get_time",b"last_get_time","member_seq",b"member_seq"]) -> None: ...

class PbGetDiscussMsgResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    DISCUSS_UIN_FIELD_NUMBER: int
    RETURN_END_SEQ_FIELD_NUMBER: int
    RETURN_BEGIN_SEQ_FIELD_NUMBER: int
    MSG_FIELD_NUMBER: int
    LAST_GET_TIME_FIELD_NUMBER: int
    DISCUSS_INFO_SEQ_FIELD_NUMBER: int
    result: int
    errmsg: Text
    discuss_uin: int
    return_end_seq: int
    return_begin_seq: int
    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...
    last_get_time: int
    discuss_info_seq: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        discuss_uin: Optional[int] = ...,
        return_end_seq: Optional[int] = ...,
        return_begin_seq: Optional[int] = ...,
        msg: Optional[Iterable[Msg]] = ...,
        last_get_time: Optional[int] = ...,
        discuss_info_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["discuss_info_seq",b"discuss_info_seq","discuss_uin",b"discuss_uin","errmsg",b"errmsg","last_get_time",b"last_get_time","result",b"result","return_begin_seq",b"return_begin_seq","return_end_seq",b"return_end_seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["discuss_info_seq",b"discuss_info_seq","discuss_uin",b"discuss_uin","errmsg",b"errmsg","last_get_time",b"last_get_time","msg",b"msg","result",b"result","return_begin_seq",b"return_begin_seq","return_end_seq",b"return_end_seq"]) -> None: ...

class PbGetGroupMsgReq(Message):
    DESCRIPTOR: Descriptor
    GROUP_CODE_FIELD_NUMBER: int
    BEGIN_SEQ_FIELD_NUMBER: int
    END_SEQ_FIELD_NUMBER: int
    FILTER_FIELD_NUMBER: int
    MEMBER_SEQ_FIELD_NUMBER: int
    PUBLIC_GROUP_FIELD_NUMBER: int
    SHIELD_FLAG_FIELD_NUMBER: int
    SAVE_TRAFFIC_FLAG_FIELD_NUMBER: int
    group_code: int
    begin_seq: int
    end_seq: int
    filter: int
    member_seq: int
    public_group: bool
    shield_flag: int
    save_traffic_flag: int
    def __init__(self,
        *,
        group_code: Optional[int] = ...,
        begin_seq: Optional[int] = ...,
        end_seq: Optional[int] = ...,
        filter: Optional[int] = ...,
        member_seq: Optional[int] = ...,
        public_group: Optional[bool] = ...,
        shield_flag: Optional[int] = ...,
        save_traffic_flag: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["begin_seq",b"begin_seq","end_seq",b"end_seq","filter",b"filter","group_code",b"group_code","member_seq",b"member_seq","public_group",b"public_group","save_traffic_flag",b"save_traffic_flag","shield_flag",b"shield_flag"]) -> bool: ...
    def ClearField(self, field_name: Literal["begin_seq",b"begin_seq","end_seq",b"end_seq","filter",b"filter","group_code",b"group_code","member_seq",b"member_seq","public_group",b"public_group","save_traffic_flag",b"save_traffic_flag","shield_flag",b"shield_flag"]) -> None: ...

class PbGetGroupMsgResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    GROUP_CODE_FIELD_NUMBER: int
    RETURN_BEGIN_SEQ_FIELD_NUMBER: int
    RETURN_END_SEQ_FIELD_NUMBER: int
    MSG_FIELD_NUMBER: int
    result: int
    errmsg: Text
    group_code: int
    return_begin_seq: int
    return_end_seq: int
    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        group_code: Optional[int] = ...,
        return_begin_seq: Optional[int] = ...,
        return_end_seq: Optional[int] = ...,
        msg: Optional[Iterable[Msg]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","group_code",b"group_code","result",b"result","return_begin_seq",b"return_begin_seq","return_end_seq",b"return_end_seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","group_code",b"group_code","msg",b"msg","result",b"result","return_begin_seq",b"return_begin_seq","return_end_seq",b"return_end_seq"]) -> None: ...

class PbGetMsgReq(Message):
    DESCRIPTOR: Descriptor
    SYNC_FLAG_FIELD_NUMBER: int
    SYNC_COOKIE_FIELD_NUMBER: int
    RAMBLE_FLAG_FIELD_NUMBER: int
    LATEST_RAMBLE_NUMBER_FIELD_NUMBER: int
    OTHER_RAMBLE_NUMBER_FIELD_NUMBER: int
    ONLINE_SYNC_FLAG_FIELD_NUMBER: int
    CONTEXT_FLAG_FIELD_NUMBER: int
    WHISPER_SESSION_ID_FIELD_NUMBER: int
    REQ_TYPE_FIELD_NUMBER: int
    PUBACCOUNT_COOKIE_FIELD_NUMBER: int
    CTRL_BUF_FIELD_NUMBER: int
    SERVER_BUF_FIELD_NUMBER: int
    sync_flag: int
    sync_cookie: bytes
    ramble_flag: int
    latest_ramble_number: int
    other_ramble_number: int
    online_sync_flag: int
    context_flag: int
    whisper_session_id: int
    req_type: int
    pubaccount_cookie: bytes
    ctrl_buf: bytes
    server_buf: bytes
    def __init__(self,
        *,
        sync_flag: Optional[int] = ...,
        sync_cookie: Optional[bytes] = ...,
        ramble_flag: Optional[int] = ...,
        latest_ramble_number: Optional[int] = ...,
        other_ramble_number: Optional[int] = ...,
        online_sync_flag: Optional[int] = ...,
        context_flag: Optional[int] = ...,
        whisper_session_id: Optional[int] = ...,
        req_type: Optional[int] = ...,
        pubaccount_cookie: Optional[bytes] = ...,
        ctrl_buf: Optional[bytes] = ...,
        server_buf: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["context_flag",b"context_flag","ctrl_buf",b"ctrl_buf","latest_ramble_number",b"latest_ramble_number","online_sync_flag",b"online_sync_flag","other_ramble_number",b"other_ramble_number","pubaccount_cookie",b"pubaccount_cookie","ramble_flag",b"ramble_flag","req_type",b"req_type","server_buf",b"server_buf","sync_cookie",b"sync_cookie","sync_flag",b"sync_flag","whisper_session_id",b"whisper_session_id"]) -> bool: ...
    def ClearField(self, field_name: Literal["context_flag",b"context_flag","ctrl_buf",b"ctrl_buf","latest_ramble_number",b"latest_ramble_number","online_sync_flag",b"online_sync_flag","other_ramble_number",b"other_ramble_number","pubaccount_cookie",b"pubaccount_cookie","ramble_flag",b"ramble_flag","req_type",b"req_type","server_buf",b"server_buf","sync_cookie",b"sync_cookie","sync_flag",b"sync_flag","whisper_session_id",b"whisper_session_id"]) -> None: ...

class PbGetMsgResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SYNC_COOKIE_FIELD_NUMBER: int
    SYNC_FLAG_FIELD_NUMBER: int
    UIN_PAIR_MSGS_FIELD_NUMBER: int
    BIND_UIN_FIELD_NUMBER: int
    RSP_TYPE_FIELD_NUMBER: int
    PUBACCOUNT_COOKIE_FIELD_NUMBER: int
    IS_PARTIAL_SYNC_FIELD_NUMBER: int
    CTRL_BUF_FIELD_NUMBER: int
    result: int
    errmsg: Text
    sync_cookie: bytes
    sync_flag: int
    @property
    def uin_pair_msgs(self) -> RepeatedCompositeFieldContainer[UinPairMsg]: ...
    bind_uin: int
    rsp_type: int
    pubaccount_cookie: bytes
    is_partial_sync: bool
    ctrl_buf: bytes
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        sync_cookie: Optional[bytes] = ...,
        sync_flag: Optional[int] = ...,
        uin_pair_msgs: Optional[Iterable[UinPairMsg]] = ...,
        bind_uin: Optional[int] = ...,
        rsp_type: Optional[int] = ...,
        pubaccount_cookie: Optional[bytes] = ...,
        is_partial_sync: Optional[bool] = ...,
        ctrl_buf: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["bind_uin",b"bind_uin","ctrl_buf",b"ctrl_buf","errmsg",b"errmsg","is_partial_sync",b"is_partial_sync","pubaccount_cookie",b"pubaccount_cookie","result",b"result","rsp_type",b"rsp_type","sync_cookie",b"sync_cookie","sync_flag",b"sync_flag"]) -> bool: ...
    def ClearField(self, field_name: Literal["bind_uin",b"bind_uin","ctrl_buf",b"ctrl_buf","errmsg",b"errmsg","is_partial_sync",b"is_partial_sync","pubaccount_cookie",b"pubaccount_cookie","result",b"result","rsp_type",b"rsp_type","sync_cookie",b"sync_cookie","sync_flag",b"sync_flag","uin_pair_msgs",b"uin_pair_msgs"]) -> None: ...

class PbGetOneDayRoamMsgReq(Message):
    DESCRIPTOR: Descriptor
    PEER_UIN_FIELD_NUMBER: int
    LAST_MSGTIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    READ_CNT_FIELD_NUMBER: int
    peer_uin: int
    last_msgtime: int
    random: int
    read_cnt: int
    def __init__(self,
        *,
        peer_uin: Optional[int] = ...,
        last_msgtime: Optional[int] = ...,
        random: Optional[int] = ...,
        read_cnt: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["last_msgtime",b"last_msgtime","peer_uin",b"peer_uin","random",b"random","read_cnt",b"read_cnt"]) -> bool: ...
    def ClearField(self, field_name: Literal["last_msgtime",b"last_msgtime","peer_uin",b"peer_uin","random",b"random","read_cnt",b"read_cnt"]) -> None: ...

class PbGetOneDayRoamMsgResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    PEER_UIN_FIELD_NUMBER: int
    LAST_MSGTIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    MSG_FIELD_NUMBER: int
    ISCOMPLETE_FIELD_NUMBER: int
    result: int
    errmsg: Text
    peer_uin: int
    last_msgtime: int
    random: int
    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...
    iscomplete: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        peer_uin: Optional[int] = ...,
        last_msgtime: Optional[int] = ...,
        random: Optional[int] = ...,
        msg: Optional[Iterable[Msg]] = ...,
        iscomplete: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","iscomplete",b"iscomplete","last_msgtime",b"last_msgtime","peer_uin",b"peer_uin","random",b"random","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","iscomplete",b"iscomplete","last_msgtime",b"last_msgtime","msg",b"msg","peer_uin",b"peer_uin","random",b"random","result",b"result"]) -> None: ...

class PbGetRoamMsgReq(Message):
    DESCRIPTOR: Descriptor
    PEER_UIN_FIELD_NUMBER: int
    LAST_MSGTIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    READ_CNT_FIELD_NUMBER: int
    CHECK_PWD_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    PWD_FIELD_NUMBER: int
    SUBCMD_FIELD_NUMBER: int
    BEGIN_MSGTIME_FIELD_NUMBER: int
    REQ_TYPE_FIELD_NUMBER: int
    peer_uin: int
    last_msgtime: int
    random: int
    read_cnt: int
    check_pwd: int
    sig: bytes
    pwd: bytes
    subcmd: int
    begin_msgtime: int
    req_type: int
    def __init__(self,
        *,
        peer_uin: Optional[int] = ...,
        last_msgtime: Optional[int] = ...,
        random: Optional[int] = ...,
        read_cnt: Optional[int] = ...,
        check_pwd: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        pwd: Optional[bytes] = ...,
        subcmd: Optional[int] = ...,
        begin_msgtime: Optional[int] = ...,
        req_type: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["begin_msgtime",b"begin_msgtime","check_pwd",b"check_pwd","last_msgtime",b"last_msgtime","peer_uin",b"peer_uin","pwd",b"pwd","random",b"random","read_cnt",b"read_cnt","req_type",b"req_type","sig",b"sig","subcmd",b"subcmd"]) -> bool: ...
    def ClearField(self, field_name: Literal["begin_msgtime",b"begin_msgtime","check_pwd",b"check_pwd","last_msgtime",b"last_msgtime","peer_uin",b"peer_uin","pwd",b"pwd","random",b"random","read_cnt",b"read_cnt","req_type",b"req_type","sig",b"sig","subcmd",b"subcmd"]) -> None: ...

class PbGetRoamMsgResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    PEER_UIN_FIELD_NUMBER: int
    LAST_MSGTIME_FIELD_NUMBER: int
    RANDOM_FIELD_NUMBER: int
    MSG_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    result: int
    errmsg: Text
    peer_uin: int
    last_msgtime: int
    random: int
    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...
    sig: bytes
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        peer_uin: Optional[int] = ...,
        last_msgtime: Optional[int] = ...,
        random: Optional[int] = ...,
        msg: Optional[Iterable[Msg]] = ...,
        sig: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","last_msgtime",b"last_msgtime","peer_uin",b"peer_uin","random",b"random","result",b"result","sig",b"sig"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","last_msgtime",b"last_msgtime","msg",b"msg","peer_uin",b"peer_uin","random",b"random","result",b"result","sig",b"sig"]) -> None: ...

class PbGroupMsgWithDrawReq(Message):
    DESCRIPTOR: Descriptor
    SUB_CMD_FIELD_NUMBER: int
    GROUP_TYPE_FIELD_NUMBER: int
    GROUP_CODE_FIELD_NUMBER: int
    LIST_FIELD_NUMBER: int
    USERDEF_FIELD_NUMBER: int
    sub_cmd: int
    group_type: int
    group_code: int
    @property
    def list(self) -> RepeatedCompositeFieldContainer[MessageInfo]: ...
    userdef: bytes
    def __init__(self,
        *,
        sub_cmd: Optional[int] = ...,
        group_type: Optional[int] = ...,
        group_code: Optional[int] = ...,
        list: Optional[Iterable[MessageInfo]] = ...,
        userdef: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["group_code",b"group_code","group_type",b"group_type","sub_cmd",b"sub_cmd","userdef",b"userdef"]) -> bool: ...
    def ClearField(self, field_name: Literal["group_code",b"group_code","group_type",b"group_type","list",b"list","sub_cmd",b"sub_cmd","userdef",b"userdef"]) -> None: ...

class MessageInfo(Message):
    DESCRIPTOR: Descriptor
    MSG_SEQ_FIELD_NUMBER: int
    MSG_RANDOM_FIELD_NUMBER: int
    MSG_TYPE_FIELD_NUMBER: int
    RESV_FLAG_FIELD_NUMBER: int
    msg_seq: int
    msg_random: int
    msg_type: int
    resv_flag: int
    def __init__(self,
        *,
        msg_seq: Optional[int] = ...,
        msg_random: Optional[int] = ...,
        msg_type: Optional[int] = ...,
        resv_flag: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["msg_random",b"msg_random","msg_seq",b"msg_seq","msg_type",b"msg_type","resv_flag",b"resv_flag"]) -> bool: ...
    def ClearField(self, field_name: Literal["msg_random",b"msg_random","msg_seq",b"msg_seq","msg_type",b"msg_type","resv_flag",b"resv_flag"]) -> None: ...

class PbGroupMsgWithDrawResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SUB_CMD_FIELD_NUMBER: int
    GROUP_TYPE_FIELD_NUMBER: int
    GROUP_CODE_FIELD_NUMBER: int
    FAILED_MSG_LIST_FIELD_NUMBER: int
    USERDEF_FIELD_NUMBER: int
    WORDING_INFO_FIELD_NUMBER: int
    result: int
    errmsg: Text
    sub_cmd: int
    group_type: int
    group_code: int
    @property
    def failed_msg_list(self) -> RepeatedCompositeFieldContainer[MessageResult]: ...
    userdef: bytes
    @property
    def wording_info(self) -> WithDrawWordingInfo: ...
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        sub_cmd: Optional[int] = ...,
        group_type: Optional[int] = ...,
        group_code: Optional[int] = ...,
        failed_msg_list: Optional[Iterable[MessageResult]] = ...,
        userdef: Optional[bytes] = ...,
        wording_info: Optional[WithDrawWordingInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","group_code",b"group_code","group_type",b"group_type","result",b"result","sub_cmd",b"sub_cmd","userdef",b"userdef","wording_info",b"wording_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","failed_msg_list",b"failed_msg_list","group_code",b"group_code","group_type",b"group_type","result",b"result","sub_cmd",b"sub_cmd","userdef",b"userdef","wording_info",b"wording_info"]) -> None: ...

class MessageResult(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    MSG_SEQ_FIELD_NUMBER: int
    MSG_TIME_FIELD_NUMBER: int
    MSG_RANDOM_FIELD_NUMBER: int
    ERR_MSG_FIELD_NUMBER: int
    MSG_TYPE_FIELD_NUMBER: int
    result: int
    msg_seq: int
    msg_time: int
    msg_random: int
    err_msg: bytes
    msg_type: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        msg_seq: Optional[int] = ...,
        msg_time: Optional[int] = ...,
        msg_random: Optional[int] = ...,
        err_msg: Optional[bytes] = ...,
        msg_type: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["err_msg",b"err_msg","msg_random",b"msg_random","msg_seq",b"msg_seq","msg_time",b"msg_time","msg_type",b"msg_type","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["err_msg",b"err_msg","msg_random",b"msg_random","msg_seq",b"msg_seq","msg_time",b"msg_time","msg_type",b"msg_type","result",b"result"]) -> None: ...

class PbGroupReadedReportReq(Message):
    DESCRIPTOR: Descriptor
    GROUP_CODE_FIELD_NUMBER: int
    LAST_READ_SEQ_FIELD_NUMBER: int
    group_code: int
    last_read_seq: int
    def __init__(self,
        *,
        group_code: Optional[int] = ...,
        last_read_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["group_code",b"group_code","last_read_seq",b"last_read_seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["group_code",b"group_code","last_read_seq",b"last_read_seq"]) -> None: ...

class PbGroupReadedReportResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    GROUP_CODE_FIELD_NUMBER: int
    MEMBER_SEQ_FIELD_NUMBER: int
    GROUP_MSG_SEQ_FIELD_NUMBER: int
    result: int
    errmsg: Text
    group_code: int
    member_seq: int
    group_msg_seq: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        group_code: Optional[int] = ...,
        member_seq: Optional[int] = ...,
        group_msg_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","group_code",b"group_code","group_msg_seq",b"group_msg_seq","member_seq",b"member_seq","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","group_code",b"group_code","group_msg_seq",b"group_msg_seq","member_seq",b"member_seq","result",b"result"]) -> None: ...

class PbInputNotifyInfo(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    IME_FIELD_NUMBER: int
    NOTIFY_FLAG_FIELD_NUMBER: int
    PB_RESERVE_FIELD_NUMBER: int
    IOS_PUSH_WORDING_FIELD_NUMBER: int
    to_uin: int
    ime: int
    notify_flag: int
    pb_reserve: bytes
    ios_push_wording: bytes
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        ime: Optional[int] = ...,
        notify_flag: Optional[int] = ...,
        pb_reserve: Optional[bytes] = ...,
        ios_push_wording: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["ime",b"ime","ios_push_wording",b"ios_push_wording","notify_flag",b"notify_flag","pb_reserve",b"pb_reserve","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["ime",b"ime","ios_push_wording",b"ios_push_wording","notify_flag",b"notify_flag","pb_reserve",b"pb_reserve","to_uin",b"to_uin"]) -> None: ...

class PbMsgReadedReportReq(Message):
    DESCRIPTOR: Descriptor
    GRP_READ_REPORT_FIELD_NUMBER: int
    DIS_READ_REPORT_FIELD_NUMBER: int
    C2C_READ_REPORT_FIELD_NUMBER: int
    BIND_UIN_READ_REPORT_FIELD_NUMBER: int
    @property
    def grp_read_report(self) -> RepeatedCompositeFieldContainer[PbGroupReadedReportReq]: ...
    @property
    def dis_read_report(self) -> RepeatedCompositeFieldContainer[PbDiscussReadedReportReq]: ...
    @property
    def c2c_read_report(self) -> PbC2CReadedReportReq: ...
    @property
    def bind_uin_read_report(self) -> PbBindUinMsgReadedConfirmReq: ...
    def __init__(self,
        *,
        grp_read_report: Optional[Iterable[PbGroupReadedReportReq]] = ...,
        dis_read_report: Optional[Iterable[PbDiscussReadedReportReq]] = ...,
        c2c_read_report: Optional[PbC2CReadedReportReq] = ...,
        bind_uin_read_report: Optional[PbBindUinMsgReadedConfirmReq] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["bind_uin_read_report",b"bind_uin_read_report","c2c_read_report",b"c2c_read_report"]) -> bool: ...
    def ClearField(self, field_name: Literal["bind_uin_read_report",b"bind_uin_read_report","c2c_read_report",b"c2c_read_report","dis_read_report",b"dis_read_report","grp_read_report",b"grp_read_report"]) -> None: ...

class PbMsgReadedReportResp(Message):
    DESCRIPTOR: Descriptor
    GRP_READ_REPORT_FIELD_NUMBER: int
    DIS_READ_REPORT_FIELD_NUMBER: int
    C2C_READ_REPORT_FIELD_NUMBER: int
    BIND_UIN_READ_REPORT_FIELD_NUMBER: int
    @property
    def grp_read_report(self) -> RepeatedCompositeFieldContainer[PbGroupReadedReportResp]: ...
    @property
    def dis_read_report(self) -> RepeatedCompositeFieldContainer[PbDiscussReadedReportResp]: ...
    @property
    def c2c_read_report(self) -> PbC2CReadedReportResp: ...
    @property
    def bind_uin_read_report(self) -> PbBindUinMsgReadedConfirmResp: ...
    def __init__(self,
        *,
        grp_read_report: Optional[Iterable[PbGroupReadedReportResp]] = ...,
        dis_read_report: Optional[Iterable[PbDiscussReadedReportResp]] = ...,
        c2c_read_report: Optional[PbC2CReadedReportResp] = ...,
        bind_uin_read_report: Optional[PbBindUinMsgReadedConfirmResp] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["bind_uin_read_report",b"bind_uin_read_report","c2c_read_report",b"c2c_read_report"]) -> bool: ...
    def ClearField(self, field_name: Literal["bind_uin_read_report",b"bind_uin_read_report","c2c_read_report",b"c2c_read_report","dis_read_report",b"dis_read_report","grp_read_report",b"grp_read_report"]) -> None: ...

class PbMsgWithDrawReq(Message):
    DESCRIPTOR: Descriptor
    C2C_WITH_DRAW_FIELD_NUMBER: int
    GROUP_WITH_DRAW_FIELD_NUMBER: int
    @property
    def c2c_with_draw(self) -> RepeatedCompositeFieldContainer[PbC2CMsgWithDrawReq]: ...
    @property
    def group_with_draw(self) -> RepeatedCompositeFieldContainer[PbGroupMsgWithDrawReq]: ...
    def __init__(self,
        *,
        c2c_with_draw: Optional[Iterable[PbC2CMsgWithDrawReq]] = ...,
        group_with_draw: Optional[Iterable[PbGroupMsgWithDrawReq]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["c2c_with_draw",b"c2c_with_draw","group_with_draw",b"group_with_draw"]) -> None: ...

class PbMsgWithDrawResp(Message):
    DESCRIPTOR: Descriptor
    C2C_WITH_DRAW_FIELD_NUMBER: int
    GROUP_WITH_DRAW_FIELD_NUMBER: int
    @property
    def c2c_with_draw(self) -> RepeatedCompositeFieldContainer[PbC2CMsgWithDrawResp]: ...
    @property
    def group_with_draw(self) -> RepeatedCompositeFieldContainer[PbGroupMsgWithDrawResp]: ...
    def __init__(self,
        *,
        c2c_with_draw: Optional[Iterable[PbC2CMsgWithDrawResp]] = ...,
        group_with_draw: Optional[Iterable[PbGroupMsgWithDrawResp]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["c2c_with_draw",b"c2c_with_draw","group_with_draw",b"group_with_draw"]) -> None: ...

class PbPullDiscussMsgSeqReq(Message):
    DESCRIPTOR: Descriptor
    DISCUSS_INFO_REQ_FIELD_NUMBER: int
    @property
    def discuss_info_req(self) -> RepeatedCompositeFieldContainer[DiscussInfoReq]: ...
    def __init__(self,
        *,
        discuss_info_req: Optional[Iterable[DiscussInfoReq]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["discuss_info_req",b"discuss_info_req"]) -> None: ...

class DiscussInfoReq(Message):
    DESCRIPTOR: Descriptor
    CONF_UIN_FIELD_NUMBER: int
    LAST_SEQ_FIELD_NUMBER: int
    conf_uin: int
    last_seq: int
    def __init__(self,
        *,
        conf_uin: Optional[int] = ...,
        last_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["conf_uin",b"conf_uin","last_seq",b"last_seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["conf_uin",b"conf_uin","last_seq",b"last_seq"]) -> None: ...

class PbPullDiscussMsgSeqResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    DISCUSS_INFO_RESP_FIELD_NUMBER: int
    result: int
    errmsg: Text
    @property
    def discuss_info_resp(self) -> RepeatedCompositeFieldContainer[DiscussInfoResp]: ...
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        discuss_info_resp: Optional[Iterable[DiscussInfoResp]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["discuss_info_resp",b"discuss_info_resp","errmsg",b"errmsg","result",b"result"]) -> None: ...

class DiscussInfoResp(Message):
    DESCRIPTOR: Descriptor
    CONF_UIN_FIELD_NUMBER: int
    MEMBER_SEQ_FIELD_NUMBER: int
    CONF_SEQ_FIELD_NUMBER: int
    conf_uin: int
    member_seq: int
    conf_seq: int
    def __init__(self,
        *,
        conf_uin: Optional[int] = ...,
        member_seq: Optional[int] = ...,
        conf_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["conf_seq",b"conf_seq","conf_uin",b"conf_uin","member_seq",b"member_seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["conf_seq",b"conf_seq","conf_uin",b"conf_uin","member_seq",b"member_seq"]) -> None: ...

class PbPullGroupMsgSeqReq(Message):
    DESCRIPTOR: Descriptor
    GROUP_INFO_REQ_FIELD_NUMBER: int
    @property
    def group_info_req(self) -> RepeatedCompositeFieldContainer[GroupInfoReq]: ...
    def __init__(self,
        *,
        group_info_req: Optional[Iterable[GroupInfoReq]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal["group_info_req",b"group_info_req"]) -> None: ...

class GroupInfoReq(Message):
    DESCRIPTOR: Descriptor
    GROUP_CODE_FIELD_NUMBER: int
    LAST_SEQ_FIELD_NUMBER: int
    group_code: int
    last_seq: int
    def __init__(self,
        *,
        group_code: Optional[int] = ...,
        last_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["group_code",b"group_code","last_seq",b"last_seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["group_code",b"group_code","last_seq",b"last_seq"]) -> None: ...

class PbPullGroupMsgSeqResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    GROUP_INFO_RESP_FIELD_NUMBER: int
    result: int
    errmsg: Text
    @property
    def group_info_resp(self) -> RepeatedCompositeFieldContainer[GroupInfoResp]: ...
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        group_info_resp: Optional[Iterable[GroupInfoResp]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","group_info_resp",b"group_info_resp","result",b"result"]) -> None: ...

class GroupInfoResp(Message):
    DESCRIPTOR: Descriptor
    GROUP_CODE_FIELD_NUMBER: int
    MEMBER_SEQ_FIELD_NUMBER: int
    GROUP_SEQ_FIELD_NUMBER: int
    group_code: int
    member_seq: int
    group_seq: int
    def __init__(self,
        *,
        group_code: Optional[int] = ...,
        member_seq: Optional[int] = ...,
        group_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["group_code",b"group_code","group_seq",b"group_seq","member_seq",b"member_seq"]) -> bool: ...
    def ClearField(self, field_name: Literal["group_code",b"group_code","group_seq",b"group_seq","member_seq",b"member_seq"]) -> None: ...

class PbSearchRoamMsgInCloudReq(Message):
    DESCRIPTOR: Descriptor
    SERIALIZE_REQBODY_FIELD_NUMBER: int
    serialize_reqbody: bytes
    def __init__(self,
        *,
        serialize_reqbody: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["serialize_reqbody",b"serialize_reqbody"]) -> bool: ...
    def ClearField(self, field_name: Literal["serialize_reqbody",b"serialize_reqbody"]) -> None: ...

class PbSearchRoamMsgInCloudResp(Message):
    DESCRIPTOR: Descriptor
    MSG_FIELD_NUMBER: int
    SERIALIZE_RSPBODY_FIELD_NUMBER: int
    @property
    def msg(self) -> RepeatedCompositeFieldContainer[Msg]: ...
    serialize_rspbody: bytes
    def __init__(self,
        *,
        msg: Optional[Iterable[Msg]] = ...,
        serialize_rspbody: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["serialize_rspbody",b"serialize_rspbody"]) -> bool: ...
    def ClearField(self, field_name: Literal["msg",b"msg","serialize_rspbody",b"serialize_rspbody"]) -> None: ...

class PbSendMsgReq(Message):
    DESCRIPTOR: Descriptor
    ROUTING_HEAD_FIELD_NUMBER: int
    CONTENT_HEAD_FIELD_NUMBER: int
    BODY_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    RAND_FIELD_NUMBER: int
    SYNC_COOKIE_FIELD_NUMBER: int
    APP_SHARE_FIELD_NUMBER: int
    VIA_FIELD_NUMBER: int
    DATA_STATIST_FIELD_NUMBER: int
    MULTI_MSG_ASSIST_FIELD_NUMBER: int
    INPUT_NOTIFY_INFO_FIELD_NUMBER: int
    CTRL_FIELD_NUMBER: int
    RECEIPT_REQ_FIELD_NUMBER: int
    MULTI_SEND_SEQ_FIELD_NUMBER: int
    @property
    def routing_head(self) -> RoutingHead: ...
    @property
    def content_head(self) -> ContentHead: ...
    @property
    def body(self) -> MsgBody: ...
    seq: int
    rand: int
    sync_cookie: bytes
    @property
    def app_share(self) -> AppShareInfo: ...
    via: int
    data_statist: int
    @property
    def multi_msg_assist(self) -> MultiMsgAssist: ...
    @property
    def input_notify_info(self) -> PbInputNotifyInfo: ...
    @property
    def ctrl(self) -> MsgCtrl: ...
    @property
    def receipt_req(self) -> ReceiptReq: ...
    multi_send_seq: int
    def __init__(self,
        *,
        routing_head: Optional[RoutingHead] = ...,
        content_head: Optional[ContentHead] = ...,
        body: Optional[MsgBody] = ...,
        seq: Optional[int] = ...,
        rand: Optional[int] = ...,
        sync_cookie: Optional[bytes] = ...,
        app_share: Optional[AppShareInfo] = ...,
        via: Optional[int] = ...,
        data_statist: Optional[int] = ...,
        multi_msg_assist: Optional[MultiMsgAssist] = ...,
        input_notify_info: Optional[PbInputNotifyInfo] = ...,
        ctrl: Optional[MsgCtrl] = ...,
        receipt_req: Optional[ReceiptReq] = ...,
        multi_send_seq: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["app_share",b"app_share","body",b"body","content_head",b"content_head","ctrl",b"ctrl","data_statist",b"data_statist","input_notify_info",b"input_notify_info","multi_msg_assist",b"multi_msg_assist","multi_send_seq",b"multi_send_seq","rand",b"rand","receipt_req",b"receipt_req","routing_head",b"routing_head","seq",b"seq","sync_cookie",b"sync_cookie","via",b"via"]) -> bool: ...
    def ClearField(self, field_name: Literal["app_share",b"app_share","body",b"body","content_head",b"content_head","ctrl",b"ctrl","data_statist",b"data_statist","input_notify_info",b"input_notify_info","multi_msg_assist",b"multi_msg_assist","multi_send_seq",b"multi_send_seq","rand",b"rand","receipt_req",b"receipt_req","routing_head",b"routing_head","seq",b"seq","sync_cookie",b"sync_cookie","via",b"via"]) -> None: ...

class PbSendMsgResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    SEND_TIME_FIELD_NUMBER: int
    SVRBUSY_WAIT_TIME_FIELD_NUMBER: int
    SEND_INFO_FIELD_NUMBER: int
    ERRTYPE_FIELD_NUMBER: int
    TRANS_SVR_INFO_FIELD_NUMBER: int
    RECEIPT_RESP_FIELD_NUMBER: int
    TEXT_ANALYSIS_RESULT_FIELD_NUMBER: int
    MSG_INFO_FLAG_FIELD_NUMBER: int
    result: int
    errmsg: Text
    send_time: int
    svrbusy_wait_time: int
    @property
    def send_info(self) -> MsgSendInfo: ...
    errtype: int
    @property
    def trans_svr_info(self) -> TransSvrInfo: ...
    @property
    def receipt_resp(self) -> ReceiptResp: ...
    text_analysis_result: int
    msg_info_flag: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        send_time: Optional[int] = ...,
        svrbusy_wait_time: Optional[int] = ...,
        send_info: Optional[MsgSendInfo] = ...,
        errtype: Optional[int] = ...,
        trans_svr_info: Optional[TransSvrInfo] = ...,
        receipt_resp: Optional[ReceiptResp] = ...,
        text_analysis_result: Optional[int] = ...,
        msg_info_flag: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","errtype",b"errtype","msg_info_flag",b"msg_info_flag","receipt_resp",b"receipt_resp","result",b"result","send_info",b"send_info","send_time",b"send_time","svrbusy_wait_time",b"svrbusy_wait_time","text_analysis_result",b"text_analysis_result","trans_svr_info",b"trans_svr_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","errtype",b"errtype","msg_info_flag",b"msg_info_flag","receipt_resp",b"receipt_resp","result",b"result","send_info",b"send_info","send_time",b"send_time","svrbusy_wait_time",b"svrbusy_wait_time","text_analysis_result",b"text_analysis_result","trans_svr_info",b"trans_svr_info"]) -> None: ...

class PbThirdQQUnReadMsgNumReq(Message):
    DESCRIPTOR: Descriptor
    THIRDQQ_REQ_INFO_FIELD_NUMBER: int
    SOURCE_FIELD_NUMBER: int
    @property
    def thirdqq_req_info(self) -> RepeatedCompositeFieldContainer[ThirdQQReqInfo]: ...
    source: int
    def __init__(self,
        *,
        thirdqq_req_info: Optional[Iterable[ThirdQQReqInfo]] = ...,
        source: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["source",b"source"]) -> bool: ...
    def ClearField(self, field_name: Literal["source",b"source","thirdqq_req_info",b"thirdqq_req_info"]) -> None: ...

class ThirdQQReqInfo(Message):
    DESCRIPTOR: Descriptor
    THIRD_UIN_FIELD_NUMBER: int
    THIRD_UIN_SIG_FIELD_NUMBER: int
    THIRD_UIN_COOKIE_FIELD_NUMBER: int
    third_uin: int
    third_uin_sig: bytes
    third_uin_cookie: bytes
    def __init__(self,
        *,
        third_uin: Optional[int] = ...,
        third_uin_sig: Optional[bytes] = ...,
        third_uin_cookie: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["third_uin",b"third_uin","third_uin_cookie",b"third_uin_cookie","third_uin_sig",b"third_uin_sig"]) -> bool: ...
    def ClearField(self, field_name: Literal["third_uin",b"third_uin","third_uin_cookie",b"third_uin_cookie","third_uin_sig",b"third_uin_sig"]) -> None: ...

class PbThirdQQUnReadMsgNumResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    THIRDQQ_RESP_INFO_FIELD_NUMBER: int
    INTERVAL_FIELD_NUMBER: int
    result: int
    errmsg: Text
    @property
    def thirdqq_resp_info(self) -> RepeatedCompositeFieldContainer[ThirdQQRespInfo]: ...
    interval: int
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        thirdqq_resp_info: Optional[Iterable[ThirdQQRespInfo]] = ...,
        interval: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","interval",b"interval","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","interval",b"interval","result",b"result","thirdqq_resp_info",b"thirdqq_resp_info"]) -> None: ...

class ThirdQQRespInfo(Message):
    DESCRIPTOR: Descriptor
    THIRD_UIN_FIELD_NUMBER: int
    THIRD_UIN_COOKIE_FIELD_NUMBER: int
    NUM_FIELD_NUMBER: int
    FLAG_FIELD_NUMBER: int
    REDBAG_TIME_FIELD_NUMBER: int
    STATUS_FIELD_NUMBER: int
    LAST_MSG_TIME_FIELD_NUMBER: int
    third_uin: int
    third_uin_cookie: bytes
    num: int
    flag: int
    redbag_time: int
    status: int
    last_msg_time: int
    def __init__(self,
        *,
        third_uin: Optional[int] = ...,
        third_uin_cookie: Optional[bytes] = ...,
        num: Optional[int] = ...,
        flag: Optional[int] = ...,
        redbag_time: Optional[int] = ...,
        status: Optional[int] = ...,
        last_msg_time: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["flag",b"flag","last_msg_time",b"last_msg_time","num",b"num","redbag_time",b"redbag_time","status",b"status","third_uin",b"third_uin","third_uin_cookie",b"third_uin_cookie"]) -> bool: ...
    def ClearField(self, field_name: Literal["flag",b"flag","last_msg_time",b"last_msg_time","num",b"num","redbag_time",b"redbag_time","status",b"status","third_uin",b"third_uin","third_uin_cookie",b"third_uin_cookie"]) -> None: ...

class PbUnReadMsgSeqReq(Message):
    DESCRIPTOR: Descriptor
    C2C_UNREAD_INFO_FIELD_NUMBER: int
    BINDUIN_UNREAD_INFO_FIELD_NUMBER: int
    GROUP_UNREAD_INFO_FIELD_NUMBER: int
    DISCUSS_UNREAD_INFO_FIELD_NUMBER: int
    THIRDQQ_UNREAD_INFO_FIELD_NUMBER: int
    @property
    def c2c_unread_info(self) -> PbC2CUnReadMsgNumReq: ...
    @property
    def binduin_unread_info(self) -> RepeatedCompositeFieldContainer[PbBindUinUnReadMsgNumReq]: ...
    @property
    def group_unread_info(self) -> PbPullGroupMsgSeqReq: ...
    @property
    def discuss_unread_info(self) -> PbPullDiscussMsgSeqReq: ...
    @property
    def thirdqq_unread_info(self) -> PbThirdQQUnReadMsgNumReq: ...
    def __init__(self,
        *,
        c2c_unread_info: Optional[PbC2CUnReadMsgNumReq] = ...,
        binduin_unread_info: Optional[Iterable[PbBindUinUnReadMsgNumReq]] = ...,
        group_unread_info: Optional[PbPullGroupMsgSeqReq] = ...,
        discuss_unread_info: Optional[PbPullDiscussMsgSeqReq] = ...,
        thirdqq_unread_info: Optional[PbThirdQQUnReadMsgNumReq] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["c2c_unread_info",b"c2c_unread_info","discuss_unread_info",b"discuss_unread_info","group_unread_info",b"group_unread_info","thirdqq_unread_info",b"thirdqq_unread_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["binduin_unread_info",b"binduin_unread_info","c2c_unread_info",b"c2c_unread_info","discuss_unread_info",b"discuss_unread_info","group_unread_info",b"group_unread_info","thirdqq_unread_info",b"thirdqq_unread_info"]) -> None: ...

class PbUnReadMsgSeqResp(Message):
    DESCRIPTOR: Descriptor
    C2C_UNREAD_INFO_FIELD_NUMBER: int
    BINDUIN_UNREAD_INFO_FIELD_NUMBER: int
    GROUP_UNREAD_INFO_FIELD_NUMBER: int
    DISCUSS_UNREAD_INFO_FIELD_NUMBER: int
    THIRDQQ_UNREAD_INFO_FIELD_NUMBER: int
    @property
    def c2c_unread_info(self) -> PbC2CUnReadMsgNumResp: ...
    @property
    def binduin_unread_info(self) -> RepeatedCompositeFieldContainer[PbBindUinUnReadMsgNumResp]: ...
    @property
    def group_unread_info(self) -> PbPullGroupMsgSeqResp: ...
    @property
    def discuss_unread_info(self) -> PbPullDiscussMsgSeqResp: ...
    @property
    def thirdqq_unread_info(self) -> PbThirdQQUnReadMsgNumResp: ...
    def __init__(self,
        *,
        c2c_unread_info: Optional[PbC2CUnReadMsgNumResp] = ...,
        binduin_unread_info: Optional[Iterable[PbBindUinUnReadMsgNumResp]] = ...,
        group_unread_info: Optional[PbPullGroupMsgSeqResp] = ...,
        discuss_unread_info: Optional[PbPullDiscussMsgSeqResp] = ...,
        thirdqq_unread_info: Optional[PbThirdQQUnReadMsgNumResp] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["c2c_unread_info",b"c2c_unread_info","discuss_unread_info",b"discuss_unread_info","group_unread_info",b"group_unread_info","thirdqq_unread_info",b"thirdqq_unread_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["binduin_unread_info",b"binduin_unread_info","c2c_unread_info",b"c2c_unread_info","discuss_unread_info",b"discuss_unread_info","group_unread_info",b"group_unread_info","thirdqq_unread_info",b"thirdqq_unread_info"]) -> None: ...

class PubGroupTmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    GROUP_UIN_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    group_uin: int
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        group_uin: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["group_uin",b"group_uin","sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["group_uin",b"group_uin","sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class PublicPlat(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class QQQueryBusinessTmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class RichStatusTmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class RoutingHead(Message):
    DESCRIPTOR: Descriptor
    C2C_FIELD_NUMBER: int
    GRP_FIELD_NUMBER: int
    GRP_TMP_FIELD_NUMBER: int
    DIS_FIELD_NUMBER: int
    DIS_TMP_FIELD_NUMBER: int
    WPA_TMP_FIELD_NUMBER: int
    PUBLIC_PLAT_FIELD_NUMBER: int
    TRANS_MSG_FIELD_NUMBER: int
    ADDRESS_LIST_FIELD_NUMBER: int
    RICH_STATUS_TMP_FIELD_NUMBER: int
    TRANS_CMD_FIELD_NUMBER: int
    ACCOST_TMP_FIELD_NUMBER: int
    PUB_GROUP_TMP_FIELD_NUMBER: int
    TRANS_0_X211_FIELD_NUMBER: int
    BUSINESS_WPA_TMP_FIELD_NUMBER: int
    AUTH_TMP_FIELD_NUMBER: int
    BSNS_TMP_FIELD_NUMBER: int
    QQ_QUERYBUSINESS_TMP_FIELD_NUMBER: int
    NEARBY_DATING_TMP_FIELD_NUMBER: int
    NEARBY_ASSISTANT_TMP_FIELD_NUMBER: int
    COMM_TMP_FIELD_NUMBER: int
    @property
    def c2c(self) -> C2C: ...
    @property
    def grp(self) -> Grp: ...
    @property
    def grp_tmp(self) -> GrpTmp: ...
    @property
    def dis(self) -> Dis: ...
    @property
    def dis_tmp(self) -> DisTmp: ...
    @property
    def wpa_tmp(self) -> WPATmp: ...
    @property
    def public_plat(self) -> PublicPlat:
        """optional SecretFileHead secret_file = 7;"""
        pass
    @property
    def trans_msg(self) -> TransMsg: ...
    @property
    def address_list(self) -> AddressListTmp: ...
    @property
    def rich_status_tmp(self) -> RichStatusTmp: ...
    @property
    def trans_cmd(self) -> TransCmd: ...
    @property
    def accost_tmp(self) -> AccostTmp: ...
    @property
    def pub_group_tmp(self) -> PubGroupTmp: ...
    @property
    def trans_0_x211(self) -> Trans0x211: ...
    @property
    def business_wpa_tmp(self) -> BusinessWPATmp: ...
    @property
    def auth_tmp(self) -> AuthTmp: ...
    @property
    def bsns_tmp(self) -> BsnsTmp: ...
    @property
    def qq_querybusiness_tmp(self) -> QQQueryBusinessTmp: ...
    @property
    def nearby_dating_tmp(self) -> NearByDatingTmp: ...
    @property
    def nearby_assistant_tmp(self) -> NearByAssistantTmp: ...
    @property
    def comm_tmp(self) -> CommTmp: ...
    def __init__(self,
        *,
        c2c: Optional[C2C] = ...,
        grp: Optional[Grp] = ...,
        grp_tmp: Optional[GrpTmp] = ...,
        dis: Optional[Dis] = ...,
        dis_tmp: Optional[DisTmp] = ...,
        wpa_tmp: Optional[WPATmp] = ...,
        public_plat: Optional[PublicPlat] = ...,
        trans_msg: Optional[TransMsg] = ...,
        address_list: Optional[AddressListTmp] = ...,
        rich_status_tmp: Optional[RichStatusTmp] = ...,
        trans_cmd: Optional[TransCmd] = ...,
        accost_tmp: Optional[AccostTmp] = ...,
        pub_group_tmp: Optional[PubGroupTmp] = ...,
        trans_0_x211: Optional[Trans0x211] = ...,
        business_wpa_tmp: Optional[BusinessWPATmp] = ...,
        auth_tmp: Optional[AuthTmp] = ...,
        bsns_tmp: Optional[BsnsTmp] = ...,
        qq_querybusiness_tmp: Optional[QQQueryBusinessTmp] = ...,
        nearby_dating_tmp: Optional[NearByDatingTmp] = ...,
        nearby_assistant_tmp: Optional[NearByAssistantTmp] = ...,
        comm_tmp: Optional[CommTmp] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["accost_tmp",b"accost_tmp","address_list",b"address_list","auth_tmp",b"auth_tmp","bsns_tmp",b"bsns_tmp","business_wpa_tmp",b"business_wpa_tmp","c2c",b"c2c","comm_tmp",b"comm_tmp","dis",b"dis","dis_tmp",b"dis_tmp","grp",b"grp","grp_tmp",b"grp_tmp","nearby_assistant_tmp",b"nearby_assistant_tmp","nearby_dating_tmp",b"nearby_dating_tmp","pub_group_tmp",b"pub_group_tmp","public_plat",b"public_plat","qq_querybusiness_tmp",b"qq_querybusiness_tmp","rich_status_tmp",b"rich_status_tmp","trans_0_x211",b"trans_0_x211","trans_cmd",b"trans_cmd","trans_msg",b"trans_msg","wpa_tmp",b"wpa_tmp"]) -> bool: ...
    def ClearField(self, field_name: Literal["accost_tmp",b"accost_tmp","address_list",b"address_list","auth_tmp",b"auth_tmp","bsns_tmp",b"bsns_tmp","business_wpa_tmp",b"business_wpa_tmp","c2c",b"c2c","comm_tmp",b"comm_tmp","dis",b"dis","dis_tmp",b"dis_tmp","grp",b"grp","grp_tmp",b"grp_tmp","nearby_assistant_tmp",b"nearby_assistant_tmp","nearby_dating_tmp",b"nearby_dating_tmp","pub_group_tmp",b"pub_group_tmp","public_plat",b"public_plat","qq_querybusiness_tmp",b"qq_querybusiness_tmp","rich_status_tmp",b"rich_status_tmp","trans_0_x211",b"trans_0_x211","trans_cmd",b"trans_cmd","trans_msg",b"trans_msg","wpa_tmp",b"wpa_tmp"]) -> None: ...

class Trans0x211(Message):
    """message SecretFileHead {
      optional SubMsgType0xc1.MsgBody secret_file_msg = 1;
      optional SubMsgType0x1a.MsgBody secret_file_status = 2;
    }

    """
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    CC_CMD_FIELD_NUMBER: int
    INST_CTRL_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    C2C_TYPE_FIELD_NUMBER: int
    SERVICE_TYPE_FIELD_NUMBER: int
    DATALINE_FLAG_FIELD_NUMBER: int
    to_uin: int
    cc_cmd: int
    @property
    def inst_ctrl(self) -> InstCtrl: ...
    sig: bytes
    c2c_type: int
    service_type: int
    dataline_flag: int
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        cc_cmd: Optional[int] = ...,
        inst_ctrl: Optional[InstCtrl] = ...,
        sig: Optional[bytes] = ...,
        c2c_type: Optional[int] = ...,
        service_type: Optional[int] = ...,
        dataline_flag: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["c2c_type",b"c2c_type","cc_cmd",b"cc_cmd","dataline_flag",b"dataline_flag","inst_ctrl",b"inst_ctrl","service_type",b"service_type","sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["c2c_type",b"c2c_type","cc_cmd",b"cc_cmd","dataline_flag",b"dataline_flag","inst_ctrl",b"inst_ctrl","service_type",b"service_type","sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class TransCmd(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    to_uin: int
    type: int
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        type: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["to_uin",b"to_uin","type",b"type"]) -> bool: ...
    def ClearField(self, field_name: Literal["to_uin",b"to_uin","type",b"type"]) -> None: ...

class TransMsg(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    C2C_CMD_FIELD_NUMBER: int
    to_uin: int
    c2c_cmd: int
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        c2c_cmd: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["c2c_cmd",b"c2c_cmd","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["c2c_cmd",b"c2c_cmd","to_uin",b"to_uin"]) -> None: ...

class TransReq(Message):
    DESCRIPTOR: Descriptor
    COMMAND_FIELD_NUMBER: int
    REQ_TAG_FIELD_NUMBER: int
    REQ_BUFF_FIELD_NUMBER: int
    command: int
    req_tag: int
    req_buff: bytes
    def __init__(self,
        *,
        command: Optional[int] = ...,
        req_tag: Optional[int] = ...,
        req_buff: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["command",b"command","req_buff",b"req_buff","req_tag",b"req_tag"]) -> bool: ...
    def ClearField(self, field_name: Literal["command",b"command","req_buff",b"req_buff","req_tag",b"req_tag"]) -> None: ...

class TransResp(Message):
    DESCRIPTOR: Descriptor
    RESULT_FIELD_NUMBER: int
    ERRMSG_FIELD_NUMBER: int
    RESP_TAG_FIELD_NUMBER: int
    RESP_BUFF_FIELD_NUMBER: int
    result: int
    errmsg: Text
    resp_tag: int
    resp_buff: bytes
    def __init__(self,
        *,
        result: Optional[int] = ...,
        errmsg: Optional[Text] = ...,
        resp_tag: Optional[int] = ...,
        resp_buff: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["errmsg",b"errmsg","resp_buff",b"resp_buff","resp_tag",b"resp_tag","result",b"result"]) -> bool: ...
    def ClearField(self, field_name: Literal["errmsg",b"errmsg","resp_buff",b"resp_buff","resp_tag",b"resp_tag","result",b"result"]) -> None: ...

class TransSvrInfo(Message):
    DESCRIPTOR: Descriptor
    SUB_TYPE_FIELD_NUMBER: int
    RET_CODE_FIELD_NUMBER: int
    ERR_MSG_FIELD_NUMBER: int
    TRANS_INFO_FIELD_NUMBER: int
    sub_type: int
    ret_code: int
    err_msg: bytes
    trans_info: bytes
    def __init__(self,
        *,
        sub_type: Optional[int] = ...,
        ret_code: Optional[int] = ...,
        err_msg: Optional[bytes] = ...,
        trans_info: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["err_msg",b"err_msg","ret_code",b"ret_code","sub_type",b"sub_type","trans_info",b"trans_info"]) -> bool: ...
    def ClearField(self, field_name: Literal["err_msg",b"err_msg","ret_code",b"ret_code","sub_type",b"sub_type","trans_info",b"trans_info"]) -> None: ...

class WPATmp(Message):
    DESCRIPTOR: Descriptor
    TO_UIN_FIELD_NUMBER: int
    SIG_FIELD_NUMBER: int
    to_uin: int
    sig: bytes
    def __init__(self,
        *,
        to_uin: Optional[int] = ...,
        sig: Optional[bytes] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> bool: ...
    def ClearField(self, field_name: Literal["sig",b"sig","to_uin",b"to_uin"]) -> None: ...

class WithDrawWordingInfo(Message):
    DESCRIPTOR: Descriptor
    ITEM_ID_FIELD_NUMBER: int
    ITEM_NAME_FIELD_NUMBER: int
    item_id: int
    item_name: Text
    def __init__(self,
        *,
        item_id: Optional[int] = ...,
        item_name: Optional[Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["item_id",b"item_id","item_name",b"item_name"]) -> bool: ...
    def ClearField(self, field_name: Literal["item_id",b"item_id","item_name",b"item_name"]) -> None: ...
